PARTITIONS = [1]
GATEWAY_LOGIN = GATEWAY_MEMBERNAME + "-" + GATEWAY_USERNAME
BUSINESSUNITS_USERS = refdata.fetchUnitsUsers(gwUser=GATEWAY_LOGIN)

#PRODUCTS=[1522,1525,2550,1017,818]
#PRODUCTS=[93,531,471,405,334]
PRODUCTS=[213,216,238,247,267]

ORDER_PRODUCTS_INSTRUMENTS = refdata.fetchProductsInstruments(partitions=PARTITIONS, products=PRODUCTS)
#ORDER_PRODUCTS_INSTRUMENTS = refdata.fetchProductsInstruments(partitions=PARTITIONS)
print len(ORDER_PRODUCTS_INSTRUMENTS)
QUOTE_PRODUCTS_INSTRUMENTS = refdata.fetchProductsInstruments(gwUser=GATEWAY_LOGIN, partitions=PARTITIONS, products=PRODUCTS) 

COMPLEX_INSTRUMENTS_STANDARD = refdata.fetchProductsComplexInstruments(partitions=PARTITIONS, instrumentType=2, products=PRODUCTS)
COMPLEX_INSTRUMENTS_STOCK = refdata.fetchProductsComplexInstruments(partitions=PARTITIONS, instrumentType=3, products=PRODUCTS)

# Don't use the products from which the user is a market maker of, otherwise GTC orders will be rejected
for product in QUOTE_PRODUCTS_INSTRUMENTS:
    del ORDER_PRODUCTS_INSTRUMENTS[product]

# Get the 10 products with higher number of instruments in it, use only the first instrument
ORDER_PRODUCTS_INSTRUMENTS = ORDER_PRODUCTS_INSTRUMENTS.items()
ORDER_PRODUCTS_INSTRUMENTS = sorted(ORDER_PRODUCTS_INSTRUMENTS, key=lambda product: product[0])
ORDER_PRODUCTS_INSTRUMENTS = sorted(ORDER_PRODUCTS_INSTRUMENTS, key=lambda product: len(product[1]), reverse=True)
ORDER_PRODUCTS_INSTRUMENTS = ORDER_PRODUCTS_INSTRUMENTS[:200]
ORDER_PRODUCTS_INSTRUMENTS = [(product[0], sorted(product[1])[0:1]) for product in ORDER_PRODUCTS_INSTRUMENTS]
ORDER_PRODUCTS_INSTRUMENTS = dict(ORDER_PRODUCTS_INSTRUMENTS)

PRODUCTS_PRICESTEPS = refdata.fetchPriceSteps()  

MASSQUOTE_PERCENT = 0
MASSQUOTE_MINSIZE = 5
MASSQUOTE_MAXSIZE = 5
MASSQUOTE_SPREAD = 30

ORDERADD_PERCENT = 100
ORDERADD_IOCPERCENT = 100
ORDERADD_BUYRATIO = 0
ORDERADD_SELLRATIO = 1
ORDERADD_SENDCONTRAORDER = False
ORDERADD_PERSIST = False
ORDERADD_MARKETPRICE = True

ORDERDEL_PERCENT = 0
ORDERDEL_SEQUENCELEN = 0

ORDERMOD_PERCENT = 0
ORDERMOD_SEQUENCELEN = 10

ORDERMOD_RESTING_COMPLEXSTD_PERCENT = 0
ORDERMOD_RESTING_NUMORDERS = 2


CANCELQUOTES_PERCENT = 0

INACTIVATEQUOTES_PERCENT = 0
REACTIVATEQUOTES = True

COMPLEXINSTRUMENTADDSTANDARD_PERCENT = 0
COMPLEXINSTRUMENTADDSTOCK_PERCENT = 0
COMPLEXINSTRUMENTADD_NUMLEGS = 3
COMPLEXINSTRUMENTADD_COMMONLEG = False

PRICE_INIT = 57
PRICE_MIN = 57
PRICE_MAX = 57
PRICE_CHANGE_TICKS = 1
PRICE_CHANGE_FREQUENCY = 0
PRICE_CHANGEDIR_FREQUENCY = 0

QUANTITY_MIN = 1
QUANTITY_MAX = 1
QUANTITY_STEP = 10
MARKETS = ['XISX']
